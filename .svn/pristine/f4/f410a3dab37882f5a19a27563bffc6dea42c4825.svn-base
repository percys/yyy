package dv.sys.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionContext;


import dv.biz.MailBoxBiz;
import dv.sys.entity.Mailbox;
import dv.sys.entity.WebUser;
import dv.util.Json;


public class MailBoxAction extends BaseAction {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private MailBoxBiz mailBox;
	private int page;//要显示的页数
	private int rows;//显示的数据大小
	private Long total;//总记录数
	private Integer Mailid;
	public String ids;
	public Mailbox mailbox;

	
	
	

	/**
	 * 用户登录
	 * @return
	 * @throws Exception
	 */
	public String count() throws Exception {
			Json json=new Json();		
			WebUser user = (WebUser) ActionContext.getContext().getSession().get("login");
			Long size=mailBox.getCount(user);
			if(size>0)
			{
				json.setSuccess(true);
				json.setMsg("您有"+size+"条信息没有查看，请及时查看！");
			}else
			{
				json.setSuccess(false);
			}
			writeJSONObject(super.ObjectToJson(json));//输出json
			return NONE;
	}
	

	
	/**	 
	 * 显示根据页面传的对象来显示要显示的数据列表
	 */
	public String getAll()
	{
		WebUser webuser = (WebUser) ActionContext.getContext().getSession().get("login");
		//获得记录总条数
		total=mailBox.getCommodityTotal(webuser);
		List<Mailbox> toto=new ArrayList<Mailbox>();
		toto=mailBox.doSplitPage(page, rows, webuser);
		//"handler"
		String s=modelBeanToJSON(new String[]{"mailboxes","hibernateLazyInitializer"}, toto, total);
		System.out.println(s);
		HttpServletResponse response=ServletActionContext.getResponse();
		response.setCharacterEncoding("utf-8");
		try {
			response.getWriter().write(s);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return NONE;
	}
	/**
	 * 更新状态
	 */
	public void updateState()
	{
		Mailbox box=mailBox.getMailbox(Mailid);
		box.setMbState("1");
		mailBox.updateMail(box);
	}
	/**
	 * 更新全部的状态
	 * @throws Exception 
	 */
	public void updateAll() throws Exception
	{
		Json json=new Json();
		for (String id : ids.split(",")) {
			try {
				Mailbox box = mailBox.getMailbox(Integer.parseInt(id));
				box.setMbState("1");
				mailBox.updateMail(box);
				json.setSuccess(true);
				json.setMsg("标识成功!");
			} catch (Exception e) {
				json.setSuccess(false);
				json.setMsg("标识失败!");
			}
			
		}	
		writeJSONObject(super.ObjectToJson(json));//输出json
	}
	
	public void save() throws Exception
	{
		Json json=new Json();
		mailbox.setMbState("0");
		int id=mailBox.addsend(mailbox);
		if(id!=0)
		{
			json.setSuccess(true);
			json.setMsg("回复成功!");
		}else
		{
			json.setSuccess(true);
			json.setMsg("回复失败!");
		}
		writeJSONObject(super.ObjectToJson(json));//输出json
	}
	
	public String savesend(){
		
		return NONE;
	}
	
	
	
	
	public Mailbox getMailbox() {
		return mailbox;
	}
	public void setMailbox(Mailbox mailbox) {
		this.mailbox = mailbox;
	}
	public String getIds() {
		return ids;
	}

	public void setIds(String ids) {
		this.ids = ids;
	}
	public Integer getMailid() {
		return Mailid;
	}

	public void setMailid(Integer mailid) {
		Mailid = mailid;
	}
	public int getPage() {
		return page;
	}
	public void setPage(int page) {
		this.page = page;
	}
	public int getRows() {
		return rows;
	}
	public void setRows(int rows) {
		this.rows = rows;
	}
	public Long getTotal() {
		return total;
	}
	public void setTotal(Long total) {
		this.total = total;
	}
	public MailBoxBiz getMailBox() {
		return mailBox;
	}
	public void setMailBox(MailBoxBiz mailBox) {
		this.mailBox = mailBox;
	}

}
